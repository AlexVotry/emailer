{"version":3,"sources":["actions/index.js","actions/types.js","components/Payments.js","components/Header.js","components/Landing.js","components/App.js","reducers/index.js","reducers/authReducer.js","index.js"],"names":["fetchUser","_ref","Object","asyncToGenerator","regenerator_default","a","mark","_callee","dispatch","res","wrap","_context","prev","next","axios","get","sent","type","payload","data","stop","this","_x","apply","arguments","handleToken","token","_ref2","_callee2","_context2","post","_x2","Payments","_this","react_default","createElement","main_default","name","description","amount","props","stripeKey","process","className","Component","connect","actions","Header","auth","href","key","components_Payments","style","margin","credits","Link","to","renderContent","Landing","textAlign","Dashboard","SurveyNew","App","BrowserRouter","components_Header","Route","exact","path","component","combineReducers","state","length","undefined","action","store","createStore","reducers","applyMiddleware","ReduxThunk","ReactDOM","render","es","components_App","document","querySelector"],"mappings":"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","file":"static/js/main.2119618e.chunk.js","sourcesContent":["import axios from 'axios';\nimport { FETCH_USER } from './types';\n\n// get user information\nexport const fetchUser = () => async dispatch => {\n    const res = await axios.get('/api/current_user');\n\n    dispatch({ type: FETCH_USER, payload: res.data });\n};\n\n// send updated user info and get back updated info.\nexport const handleToken = token => async dispatch => {\n  const res = await axios.post('/api/stripe', token);\n\n  dispatch({ type: FETCH_USER, payload: res.data });\n}\n\n// same as:\n  //redux-thunk sees this returning a function instead of an action, and delays dispatching the action until promise is resolved.\n// export const fetchUser = () => {\n//   return function(dispatch) {\n//     axios.get('/api/current_user')\n//     .then(res => dispatch({ type: FETCH_USER, payload: res }));\n//   }\n// };\n","export const FETCH_USER = 'fetch_user';\n","import React, { Component } from 'react';\nimport StripeCheckout from 'react-stripe-checkout';\nimport { connect } from 'react-redux';\nimport * as actions from '../actions';\n\n\nclass Payments extends Component {\n  render() {\n    return (\n      <StripeCheckout\n        name=\"Emailer\"\n        description=\"$5 for 5 email credits\"\n        amount={500}\n        token={ token => this.props.handleToken(token) }\n        stripeKey={process.env.REACT_APP_STRIPE_KEY}\n      >\n      <button className=\"btn\">\n        add credits\n      </button>\n      </StripeCheckout>\n    )\n  }\n}\n\nexport default connect(null, actions)(Payments);\n","// class based componnent\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport Payments from './Payments';\n\nclass Header extends Component {\n  // this.props.auth is the result from the authReducer\n  renderContent() {\n    switch (this.props.auth) {\n      case null:\n        return;\n      case false:\n        return <li><a href=\"/auth/google\">Login With Google</a></li>;\n      default:\n        return [\n          <li key=\"pmt\"><Payments/></li>,\n          <li key=\"credits\" style={{ margin: '0 10px' }}>Credits:  {this.props.auth.credits}</li>,\n          <li key=\"logout\"><a href=\"/api/logout\">Logout</a></li>\n        ]\n    }\n  }\n\n  render() {\n    return (\n      <nav>\n        <div className=\"nav-wrapper teal lighten-2\">\n          <Link\n          to={this.props.auth ? \"/surveys\" : \"/\"}\n          className=\"left brand-logo\">\n            Emailer\n          </Link>\n          <ul className=\"right\">\n            {this.renderContent()}\n          </ul>\n        </div>\n      </nav>\n    );\n  }\n}\n\nfunction mapStateToProps({ auth }) {\n  // this determines the state from reducers/authReducer.js\n  // reducers/index.js assigns it as auth.\n  return { auth };\n}\n\nexport default connect(mapStateToProps)(Header);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\n\n\nconst Landing = () => {\n  return (\n    <div style={{ textAlign: 'center' }}>\n      <h1>Emailer App</h1>\n      <p>Collect feedback from your users</p>\n    </div>\n  );\n};\n\nexport default Landing;\n","import React, { Component } from 'react';\nimport { BrowserRouter, Route } from 'react-router-dom';\nimport { connect } from 'react-redux'; // make react work with redux\nimport * as actions from '../actions';\n// BrowserRouter get at most on child (component)\nimport Header from './Header';\nimport Landing from './Landing';\n\nconst Dashboard = () => <h2>Dashboard</h2>;\nconst SurveyNew = () => <h2>SurveyNew</h2>;\n\nclass App extends Component {\n  // test if user is logged in at init\n  componentDidMount() {\n    // recieve action creators:\n    this.props.fetchUser();\n  }\n\n  render() {\n    return (\n      <div className=\"container\">\n        <BrowserRouter>\n          <div>\n            <Header />\n            <Route exact path=\"/\" component={Landing} />\n            <Route exact path=\"/surveys\" component={Dashboard} />\n            <Route path=\"/surveys/new\" component={SurveyNew} />\n          </div>\n        </BrowserRouter>\n      </div>\n    );\n  }\n};\n\nexport default connect(null, actions)(App);\n","// index of reducers\n\nimport { combineReducers } from 'redux';\nimport authReducer from './authReducer';\n\nexport default combineReducers({\n  auth: authReducer\n});\n","import { FETCH_USER } from '../actions/types';\n\nexport default function(state = null, action) {\n  switch (action.type) {\n    case FETCH_USER:\n      return action.payload || false;\n    default:\n      return state;\n  }\n}\n","import 'materialize-css/dist/css/materialize.min.css';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { createStore, applyMiddleware } from 'redux';\nimport ReduxThunk from 'redux-thunk'\n\nimport App from './components/App';\nimport reducers from './reducers';\n\n\nconst store = createStore(reducers, {}, applyMiddleware(ReduxThunk));\n\nReactDOM.render(\n  // this Provider updates the App component with new state of store\n  <Provider store={store}><App /></Provider>, document.querySelector('#root')\n\n);\n"],"sourceRoot":""}